name: Terraform Format Check

on:
  pull_request:
    branches:
      - main

jobs:
  terraform_format_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Check Terraform format
        run: terraform fmt -check -recursive

  check_lable:
    runs-on: ubuntu-latest
    depends-on: terraform_format_check
    steps:
      - name: Check if the PR has required lables set
        if: not(contains(github.event.pull_request.labels.*.name, 'major')) && not(contains(github.event.pull_request.labels.*.name, 'minor')) && not(contains(github.event.pull_request.labels.*.name, 'patch'))
        run: |
          echo "Please add set one of the following labels to the PR: major, minor, patch"
          exit 1

  publish_version:
    runs-on: ubuntu-latest
    needs: check_lable
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Calculate new version
        uses: actions/github-script@v6
        id: calculate_version
        with:
          script: |
            const latestRelease = context.payload.repository.releases[0];
            const labels = context.payload.pull_request.labels;
            const version = latestRelease.tag_name;
            const versionParts = version.split('.');
            const major = parseInt(versionParts[0]);
            const minor = parseInt(versionParts[1]);
            const patch = parseInt(versionParts[2]);
            let newVersion = '';
            if (labels.some(label => label.name === 'major')) {
              newVersion = `${major + 1}.0.0`;
            } else if (labels.some(label => label.name === 'minor')) {
              newVersion = `${major}.${minor + 1}.0`;
            } else if (labels.some(label => label.name === 'patch')) {
              newVersion = `${major}.${minor}.${patch + 1}`;
            } else {
              throw new Error('No label found');
            }
            core.setOutput('new_version', newVersion);
            core.setOutput('version', version);

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v.${{ steps.calculate_version.outputs.new_version }}"
          generate_release_notes: true
